# This is the main configuration file for the application.
# https://www.playframework.com/documentation/latest/ConfigFile

## Secret key
# http://www.playframework.com/documentation/latest/ApplicationSecret
# ~~~~~
# The secret key is used to sign Play's session cookie.
# This must be changed for production, but we don't recommend you change it in this file.
play.http.secret.key = "changeme"

play.http.errorHandler = "config.ErrorHandler"

play.filters.disabled+=play.filters.csrf.CSRFFilter

play.http.filters=common.filter.Filters

## Modules
# https://www.playframework.com/documentation/latest/Modules
# ~~~~~
# Control which modules are loaded when Play starts.  Note that modules are
# the replacement for "GlobalSettings", which are deprecated in 2.5.x.
# Please see https://www.playframework.com/documentation/latest/GlobalSettings
# for more information.
#
# You can also extend Play functionality by using one of the publically available
# Play modules: https://playframework.com/documentation/latest/ModuleDirectory
play.modules {
  # By default, Play will load any class called Module that is defined
  # in the root package (the "app" directory), or you can define them
  # explicitly below.
  # If there are any built-in modules that you want to disable, you can list them here.
  enabled += config.CustomModule
  #enabled += play.modules.swagger.SwaggerModule

  # If there are any built-in modules that you want to disable, you can list them here.
  #disabled += ""
}

# db connections = ((physical_core_count * 2) + effective_spindle_count)
fixedConnectionPool = 5

database.dispatcher {
  executor = "thread-pool-executor"
  throughput = 1
  thread-pool-executor {
    fixed-pool-size = ${fixedConnectionPool}
  }
}

# play mailer settings
play.mailer {
  #host = ""
  #port = 587
  #ssl = no
  #tls = yes
  #user = ""
  #password = ""
  #debug = no
  #timeout (defaults to 60s in milliseconds)
  #connectiontimeout (defaults to 60s in milliseconds)
  #mock (defaults to no, will only log all the email properties instead of sending an email)
  #mock=yes // change to no to actually send email after company email is setup
}

db.default {
	driver = org.h2.Driver
	url = "jdbc:h2:./database;MODE=MySQL;AUTO_SERVER=TRUE;"
	username = sa
	password = ""
	jndiName=DefaultDS
}
jpa.default=defaultPersistenceUnit

custom.settings {
	initRedirectUrl = "/init"
	secureCookie = ""
	siteUrl = "http://localhost:9000"
	contactMail = ""
	walletAddress = ""
	walletKey = "" //not implemented
	authKey = ""
	queueConsumerWaitTime = "60" // Thread wait time in minutes
	propertyFile="conf/app.properties" //from app root
	configPath="conf/dev-local.conf"
}

# configuration of payment gateway
custom.settings.pgw {
	site = "https://www.coinpayments.net/api.php"
	ipnUrl = ""
	ipnSecret = ""
	merchantId = ""
	publicKey = ""
	privateKey = ""
}

# configuration of blockchain network
custom.settings.blockchain {
	client = "https://ropsten.infura.io/PjeAjCJIg6x8UuQflKnd"
	contractAddress = ""
    	gasPrice = "21"
	gasLimit = "4700000"
	tokenDecimal = "2"
}

# configuration of token exchange rate
custom.settings.crypto.rate {
	BTC = "0.002"
	ETH = "0.02"
	LTCT = "0.002"
}

# configuration of currency activation
custom.settings.crypto.activation {
	BTC = true
	ETH = true
	LTCT = false //fake currency is not to be activated in production 
}

# configuration of bonus phases
custom.settings.bonus = [
   {  
      "phase":1,
      "startDate":"2010-04-23 09:01:02 +09:00",
      "bonus":50
   },
   {  
      "phase":2,
      "startDate":"2010-05-23 10:01:02 +09:00",
      "bonus":20
   },   
   {  
      "phase":3,
      "startDate":"2010-06-23 10:01:02 +09:00",
      "bonus":0
   }
]
